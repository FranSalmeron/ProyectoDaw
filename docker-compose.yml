version: "3.8"
services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: DockerfileFrontendFJSP
    ports:
      - "3000:3000"  
    command: >
      npm run build
    environment:
      - CHOKIDAR_USEPOLLING=true # Asegura que los cambios en el frontend sean detectados
    depends_on:
      - backend
    networks:
      - app-network

  database:
    image: mysql:8.0
    container_name: database
    ports:
      - "3307:3306"  # Cambia el puerto si es necesario
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: Proyecto-FJSP
      MYSQL_USER: salmeron
      MYSQL_PASSWORD: salmeron
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - database_data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - "8082:80"
    environment:
      PMA_HOST: database
      PMA_USER: salmeron
      PMA_PASSWORD: salmeron
    depends_on:
      - database
    networks:
      - app-network

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: DockerfileBackendFJSP
    ports:
      - "8001:80" 
    restart: always
    volumes:
      - ./backend:/var/www/html
      - ./backend/apache:/etc/apache2/sites-available
    environment:
      - APP_ENV=prod
      - APP_DEBUG=0
      - DATABASE_URL=mysql://salmeron:salmeron@database:3306/Proyecto-FJSP
    command: apache2-foreground 
    depends_on:
      - database
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./frontend/dist:/usr/share/nginx/html  
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf  # Configuraci√≥n personalizada de Nginx
      - ./nginx/certs:/etc/nginx/certs  # Certificados SSL
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  database_data:
