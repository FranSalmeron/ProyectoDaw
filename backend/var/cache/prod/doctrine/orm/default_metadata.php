<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Car__CLASSMETADATA__' => 0,
'App__Entity__CarFavorite__CLASSMETADATA__' => 1,
'App__Entity__Chat__CLASSMETADATA__' => 2,
'App__Entity__ChatMessage__CLASSMETADATA__' => 3,
'App__Entity__Transaction__CLASSMETADATA__' => 4,
'App__Entity__User__CLASSMETADATA__' => 5,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Car',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CarRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'brand' => $o[2],
                        'model' => $o[3],
                        'manufacture_year' => $o[4],
                        'mileage' => $o[5],
                        'price' => $o[6],
                        'color' => $o[7],
                        'fuelType' => $o[8],
                        'transmission' => $o[9],
                        'traction' => $o[10],
                        'doors' => $o[11],
                        'seats' => $o[12],
                        'description' => $o[13],
                        'publication_date' => $o[14],
                        'CarCondition' => $o[15],
                        'images' => $o[16],
                        'CarSold' => $o[17],
                        'lat' => $o[18],
                        'lon' => $o[19],
                        'city' => $o[20],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'brand' => 'brand',
                        'model' => 'model',
                        'manufacture_year' => 'manufacture_year',
                        'mileage' => 'mileage',
                        'price' => 'price',
                        'color' => 'color',
                        'fuel_type' => 'fuelType',
                        'transmission' => 'transmission',
                        'traction' => 'traction',
                        'doors' => 'doors',
                        'seats' => 'seats',
                        'description' => 'description',
                        'publication_date' => 'publication_date',
                        'car_condition' => 'CarCondition',
                        'images' => 'images',
                        'car_status' => 'CarSold',
                        'lat' => 'lat',
                        'lon' => 'lon',
                        'city' => 'city',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'brand' => 'brand',
                        'model' => 'model',
                        'manufacture_year' => 'manufacture_year',
                        'mileage' => 'mileage',
                        'price' => 'price',
                        'color' => 'color',
                        'fuelType' => 'fuel_type',
                        'transmission' => 'transmission',
                        'traction' => 'traction',
                        'doors' => 'doors',
                        'seats' => 'seats',
                        'description' => 'description',
                        'publication_date' => 'publication_date',
                        'CarCondition' => 'car_condition',
                        'images' => 'images',
                        'CarSold' => 'car_status',
                        'lat' => 'lat',
                        'lon' => 'lon',
                        'city' => 'city',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'car',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => $o[21],
                    ],
                ],
                'idGenerator' => [
                    $o[23],
                ],
                'name' => [
                    'App\\Entity\\Car',
                    22 => 'user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'integer',
                    'integer',
                    'decimal',
                    'string',
                    'string',
                    'string',
                    'string',
                    'integer',
                    'integer',
                    'text',
                    'datetime',
                    'string',
                    'json',
                    'string',
                    'decimal',
                    'decimal',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'brand',
                    'model',
                    'manufacture_year',
                    'mileage',
                    'price',
                    'color',
                    'fuelType',
                    'transmission',
                    'traction',
                    'doors',
                    'seats',
                    'description',
                    'publication_date',
                    'CarCondition',
                    'images',
                    'CarSold',
                    'lat',
                    'lon',
                    'city',
                ],
                'columnName' => [
                    1 => 'id',
                    'brand',
                    'model',
                    'manufacture_year',
                    'mileage',
                    'price',
                    'color',
                    'fuel_type',
                    'transmission',
                    'traction',
                    'doors',
                    'seats',
                    'description',
                    'publication_date',
                    'car_condition',
                    'images',
                    'car_status',
                    'lat',
                    'lon',
                    'city',
                ],
                'length' => [
                    2 => 100,
                    100,
                    7 => 50,
                    50,
                    50,
                    50,
                    15 => 50,
                    17 => 50,
                    20 => 255,
                ],
                'precision' => [
                    6 => 10,
                    18 => 10,
                    10,
                ],
                'scale' => [
                    6 => 2,
                    18 => 6,
                    6,
                ],
                'nullable' => [
                    13 => true,
                    16 => true,
                ],
                'fetch' => [
                    21 => 2,
                ],
                'sourceEntity' => [
                    21 => 'App\\Entity\\Car',
                ],
                'inversedBy' => [
                    21 => 'cars',
                ],
                'sourceToTargetKeyColumns' => [
                    21 => [
                        'user_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    21 => [
                        'id' => 'user_id',
                    ],
                ],
                'joinColumns' => [
                    21 => [
                        $o[22],
                    ],
                ],
                'joinColumnFieldNames' => [
                    21 => [
                        'user_id' => 'user_id',
                    ],
                ],
                'referencedColumnName' => [
                    22 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    21 => 'user',
                ],
                'targetEntity' => [
                    21 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\CarFavorite',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CarFavoriteRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'car_favorite',
                    ],
                ],
                'associationMappings' => [
                    [
                        'car' => $o[2],
                        'user' => $o[4],
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\CarFavorite',
                    3 => 'car_id',
                    5 => 'user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                ],
                'fieldName' => [
                    1 => 'id',
                ],
                'columnName' => [
                    1 => 'id',
                ],
                'cascade' => [
                    2 => [
                        'persist',
                        'remove',
                    ],
                    4 => [
                        'persist',
                        'remove',
                    ],
                ],
                'fetch' => [
                    2 => 2,
                    4 => 2,
                ],
                'sourceEntity' => [
                    2 => 'App\\Entity\\CarFavorite',
                    4 => 'App\\Entity\\CarFavorite',
                ],
                'sourceToTargetKeyColumns' => [
                    2 => [
                        'car_id' => 'id',
                    ],
                    4 => [
                        'user_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    2 => [
                        'id' => 'car_id',
                    ],
                    4 => [
                        'id' => 'user_id',
                    ],
                ],
                'joinColumns' => [
                    2 => [
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                    ],
                ],
                'joinColumnFieldNames' => [
                    2 => [
                        'car_id' => 'car_id',
                    ],
                    4 => [
                        'user_id' => 'user_id',
                    ],
                ],
                'unique' => [
                    3 => false,
                    5 => false,
                ],
                'nullable' => [
                    3 => false,
                    5 => false,
                ],
                'referencedColumnName' => [
                    3 => 'id',
                    5 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    2 => 'car',
                    4 => 'user',
                ],
                'targetEntity' => [
                    2 => 'App\\Entity\\Car',
                    4 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Chat',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ChatRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'createdDate' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'created_date' => 'createdDate',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'createdDate' => 'created_date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'chat',
                    ],
                ],
                'associationMappings' => [
                    [
                        'buyer' => $o[3],
                        'seller' => $o[5],
                        'car' => $o[7],
                    ],
                ],
                'idGenerator' => [
                    $o[9],
                ],
                'name' => [
                    'App\\Entity\\Chat',
                    4 => 'buyer_id',
                    6 => 'seller_id',
                    8 => 'car_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'datetime',
                ],
                'fieldName' => [
                    1 => 'id',
                    'createdDate',
                ],
                'columnName' => [
                    1 => 'id',
                    'created_date',
                ],
                'cascade' => [
                    3 => [
                        'remove',
                    ],
                    5 => [
                        'remove',
                    ],
                    7 => [
                        'remove',
                    ],
                ],
                'fetch' => [
                    3 => 2,
                    5 => 2,
                    7 => 2,
                ],
                'sourceEntity' => [
                    3 => 'App\\Entity\\Chat',
                    5 => 'App\\Entity\\Chat',
                    7 => 'App\\Entity\\Chat',
                ],
                'sourceToTargetKeyColumns' => [
                    3 => [
                        'buyer_id' => 'id',
                    ],
                    5 => [
                        'seller_id' => 'id',
                    ],
                    7 => [
                        'car_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    3 => [
                        'id' => 'buyer_id',
                    ],
                    5 => [
                        'id' => 'seller_id',
                    ],
                    7 => [
                        'id' => 'car_id',
                    ],
                ],
                'joinColumns' => [
                    3 => [
                        $o[4],
                    ],
                    5 => [
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                ],
                'joinColumnFieldNames' => [
                    3 => [
                        'buyer_id' => 'buyer_id',
                    ],
                    5 => [
                        'seller_id' => 'seller_id',
                    ],
                    7 => [
                        'car_id' => 'car_id',
                    ],
                ],
                'unique' => [
                    4 => false,
                    6 => false,
                    8 => false,
                ],
                'nullable' => [
                    4 => true,
                    6 => true,
                    8 => true,
                ],
                'referencedColumnName' => [
                    4 => 'id',
                    6 => 'id',
                    8 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    3 => 'buyer',
                    5 => 'seller',
                    7 => 'car',
                ],
                'targetEntity' => [
                    3 => 'App\\Entity\\User',
                    5 => 'App\\Entity\\User',
                    7 => 'App\\Entity\\Car',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ChatMessage',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ChatMessageRepository',
                ],
                'identifier' => [
                    [
                        'idMessage',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'idMessage' => $o[1],
                        'content' => $o[2],
                        'messageDate' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id_message' => 'idMessage',
                        'content' => 'content',
                        'message_date' => 'messageDate',
                    ],
                ],
                'columnNames' => [
                    [
                        'idMessage' => 'id_message',
                        'content' => 'content',
                        'messageDate' => 'message_date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'chat_message',
                    ],
                ],
                'associationMappings' => [
                    [
                        'chat' => $o[4],
                        'user' => $o[6],
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\ChatMessage',
                    5 => 'chat_id',
                    7 => 'user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'text',
                    'datetime',
                ],
                'fieldName' => [
                    1 => 'idMessage',
                    'content',
                    'messageDate',
                ],
                'columnName' => [
                    1 => 'id_message',
                    'content',
                    'message_date',
                ],
                'cascade' => [
                    4 => [
                        'remove',
                    ],
                    6 => [
                        'remove',
                    ],
                ],
                'fetch' => [
                    4 => 2,
                    6 => 2,
                ],
                'sourceEntity' => [
                    4 => 'App\\Entity\\ChatMessage',
                    6 => 'App\\Entity\\ChatMessage',
                ],
                'sourceToTargetKeyColumns' => [
                    4 => [
                        'chat_id' => 'id',
                    ],
                    6 => [
                        'user_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    4 => [
                        'id' => 'chat_id',
                    ],
                    6 => [
                        'id' => 'user_id',
                    ],
                ],
                'joinColumns' => [
                    4 => [
                        $o[5],
                    ],
                    6 => [
                        $o[7],
                    ],
                ],
                'joinColumnFieldNames' => [
                    4 => [
                        'chat_id' => 'chat_id',
                    ],
                    6 => [
                        'user_id' => 'user_id',
                    ],
                ],
                'unique' => [
                    5 => false,
                    7 => false,
                ],
                'nullable' => [
                    5 => true,
                    7 => true,
                ],
                'referencedColumnName' => [
                    5 => 'id',
                    7 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    4 => 'chat',
                    6 => 'user',
                ],
                'targetEntity' => [
                    4 => 'App\\Entity\\Chat',
                    6 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Transaction',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TransactionRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'price' => $o[2],
                        'status' => $o[3],
                        'transactionDate' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'price' => 'price',
                        'status' => 'status',
                        'transaction_date' => 'transactionDate',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'price' => 'price',
                        'status' => 'status',
                        'transactionDate' => 'transaction_date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'transaction',
                    ],
                ],
                'associationMappings' => [
                    [
                        'buyer' => $o[5],
                        'car' => $o[7],
                    ],
                ],
                'idGenerator' => [
                    $o[9],
                ],
                'name' => [
                    'App\\Entity\\Transaction',
                    6 => 'buyer_id',
                    8 => 'car_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'decimal',
                    'string',
                    'datetime',
                ],
                'fieldName' => [
                    1 => 'id',
                    'price',
                    'status',
                    'transactionDate',
                ],
                'columnName' => [
                    1 => 'id',
                    'price',
                    'status',
                    'transaction_date',
                ],
                'precision' => [
                    2 => 10,
                ],
                'scale' => [
                    2 => 2,
                ],
                'length' => [
                    3 => 20,
                ],
                'fetch' => [
                    5 => 2,
                    7 => 2,
                ],
                'sourceEntity' => [
                    5 => 'App\\Entity\\Transaction',
                    7 => 'App\\Entity\\Transaction',
                ],
                'sourceToTargetKeyColumns' => [
                    5 => [
                        'buyer_id' => 'id',
                    ],
                    7 => [
                        'car_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    5 => [
                        'id' => 'buyer_id',
                    ],
                    7 => [
                        'id' => 'car_id',
                    ],
                ],
                'joinColumns' => [
                    5 => [
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                ],
                'joinColumnFieldNames' => [
                    5 => [
                        'buyer_id' => 'buyer_id',
                    ],
                    7 => [
                        'car_id' => 'car_id',
                    ],
                ],
                'unique' => [
                    6 => false,
                    8 => false,
                ],
                'nullable' => [
                    6 => true,
                    8 => true,
                ],
                'referencedColumnName' => [
                    6 => 'id',
                    8 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    5 => 'buyer',
                    7 => 'car',
                ],
                'targetEntity' => [
                    5 => 'App\\Entity\\User',
                    7 => 'App\\Entity\\Car',
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'roles' => $o[2],
                        'password' => $o[3],
                        'name' => $o[4],
                        'email' => $o[5],
                        'address' => $o[6],
                        'phone' => $o[7],
                        'refreshToken' => $o[8],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'roles' => 'roles',
                        'password' => 'password',
                        'name' => 'name',
                        'email' => 'email',
                        'address' => 'address',
                        'phone' => 'phone',
                        'refresh_token' => 'refreshToken',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'roles' => 'roles',
                        'password' => 'password',
                        'name' => 'name',
                        'email' => 'email',
                        'address' => 'address',
                        'phone' => 'phone',
                        'refreshToken' => 'refresh_token',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'associationMappings' => [
                    [
                        'cars' => $o[9],
                    ],
                ],
                'idGenerator' => [
                    $o[10],
                ],
                'name' => [
                    'App\\Entity\\User',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'json',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'roles',
                    'password',
                    'name',
                    'email',
                    'address',
                    'phone',
                    'refreshToken',
                ],
                'columnName' => [
                    1 => 'id',
                    'roles',
                    'password',
                    'name',
                    'email',
                    'address',
                    'phone',
                    'refresh_token',
                ],
                'length' => [
                    4 => 255,
                    255,
                    255,
                    20,
                    255,
                ],
                'nullable' => [
                    6 => true,
                    true,
                ],
                'cascade' => [
                    9 => [
                        'persist',
                        'remove',
                    ],
                ],
                'fetch' => [
                    9 => 2,
                ],
                'sourceEntity' => [
                    9 => 'App\\Entity\\User',
                ],
                'mappedBy' => [
                    9 => 'User',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    9 => 'cars',
                ],
                'targetEntity' => [
                    9 => 'App\\Entity\\Car',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
