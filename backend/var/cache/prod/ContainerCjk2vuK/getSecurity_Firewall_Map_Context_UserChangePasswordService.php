<?php

namespace ContainerCjk2vuK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Firewall_Map_Context_UserChangePasswordService extends App_KernelProdContainer
{
    /*
     * Gets the private 'security.firewall.map.context.UserChangePassword' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->privates['security.authenticator.jwt.UserChangePassword'] ?? $container->load('getSecurity_Authenticator_Jwt_UserChangePasswordService'));

        if (isset($container->privates['security.firewall.map.context.UserChangePassword'])) {
            return $container->privates['security.firewall.map.context.UserChangePassword'];
        }

        return $container->privates['security.firewall.map.context.UserChangePassword'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['security.channel_listener'] ?? $container->load('getSecurity_ChannelListenerService'));
            yield 1 => ($container->privates['security.firewall.authenticator.UserChangePassword'] ?? $container->load('getSecurity_Firewall_Authenticator_UserChangePasswordService'));
            yield 2 => ($container->privates['security.access_listener'] ?? $container->load('getSecurity_AccessListenerService'));
        }, 3), new \Symfony\Component\Security\Http\Firewall\ExceptionListener(($container->privates['security.token_storage'] ?? $container->getSecurity_TokenStorageService()), ($container->privates['security.authentication.trust_resolver'] ?? ($container->privates['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver())), ($container->privates['security.http_utils'] ?? $container->load('getSecurity_HttpUtilsService')), 'UserChangePassword', $a, NULL, NULL, ($container->privates['monolog.logger.security'] ?? $container->load('getMonolog_Logger_SecurityService')), true), NULL, new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('UserChangePassword', 'security.user_checker', '.security.request_matcher.pDsVPBi', true, true, 'security.user.provider.concrete.app_user_provider', NULL, 'security.authenticator.jwt.UserChangePassword', NULL, NULL, [0 => 'jwt'], NULL));
    }
}
