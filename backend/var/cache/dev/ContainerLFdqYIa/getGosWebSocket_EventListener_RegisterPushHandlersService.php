<?php

namespace ContainerLFdqYIa;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getGosWebSocket_EventListener_RegisterPushHandlersService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'gos_web_socket.event_listener.register_push_handlers' shared service.
     *
     * @return \Gos\Bundle\WebSocketBundle\EventListener\RegisterPushHandlersListener
     *
     * @deprecated Since gos/web-socket-bundle 3.1: The "gos_web_socket.event_listener.register_push_handlers" service is deprecated and will be removed in GosWebSocketBundle 4.0.
     */
    public static function do($container, $lazyLoad = true)
    {
        trigger_deprecation('gos/web-socket-bundle', '3.1', 'The "gos_web_socket.event_listener.register_push_handlers" service is deprecated and will be removed in GosWebSocketBundle 4.0.');

        $a = ($container->privates['gos_web_socket.server.application.wamp'] ?? $container->load('getGosWebSocket_Server_Application_WampService'));

        if (isset($container->privates['gos_web_socket.event_listener.register_push_handlers'])) {
            return $container->privates['gos_web_socket.event_listener.register_push_handlers'];
        }

        $container->privates['gos_web_socket.event_listener.register_push_handlers'] = $instance = new \Gos\Bundle\WebSocketBundle\EventListener\RegisterPushHandlersListener(($container->services['gos_web_socket.registry.server_push_handler'] ?? $container->load('getGosWebSocket_Registry_ServerPushHandlerService')), $a);

        $instance->setLogger(($container->privates['monolog.logger.websocket'] ?? $container->load('getMonolog_Logger_WebsocketService')));

        return $instance;
    }
}
