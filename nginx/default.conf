# default.conf
server {
    listen 80;

    server_name _;

    root /usr/share/nginx/html;

    # Manejo de solicitudes de la API (Symfony Backend)
    location /api/ {
        proxy_pass http://backend:8001;  # Usar el nombre del servicio backend, no la IP directa

        # Agregar los encabezados CORS
        add_header 'Access-Control-Allow-Origin' 'http://192.168.1.132' always;  # Frontend IP o dominio
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

        # Manejar solicitudes OPTIONS (preflight)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://192.168.1.132' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            return 204;
        }

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /ws/ {
        proxy_pass  http://backend:8081;  # Cambia "backend" a "localhost" o "host.docker.internal"
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;

        # Configuraci√≥n de tiempos de espera
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        send_timeout 300;
    }

    location / {
        try_files $uri /index.html;
    }

    # Manejo de los errores (opcional)
    error_page  404              /404.html;
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

