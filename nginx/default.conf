server {
    listen 8080;
    server_name renovauto.up.railway.app;

    # Raíz del servidor donde se encuentra el frontend
    root /usr/share/nginx/html;
    index index.html;

    # React SPA - Servir frontend
    location / {
        # Intenta encontrar el archivo solicitado, si no lo encuentra, redirige a index.html
        try_files $uri /index.html;
    }

    # ========================
    # Sección comentada del backend
    # ========================
    # Proxy a Symfony backend
    # location /symfony/ {
    #     # Reescribe la URL eliminando /symfony
    #     rewrite ^/symfony(/.*)$ $1 break;
    #
    #     # Proxy las solicitudes al backend Symfony (usando la URL interna de Railway)
    #     proxy_pass http://proyectodaw.railway.internal:8080/;
    #
    #     # Permite el acceso de cualquier origen (CORS)
    #     add_header 'Access-Control-Allow-Origin' '*';
    #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
    #     add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
    #     add_header 'Access-Control-Allow-Credentials' 'true';
    #
    #     # Responde con un 204 para solicitudes OPTIONS (necesario para CORS)
    #     if ($request_method = 'OPTIONS') {
    #         return 204;
    #     }
    #
    #     # Cabeceras de proxy necesarias
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }
    # ========================

    # ================================
    # Sección comentada para imágenes
    # ================================
    # Servir imágenes
    # location /uploads/images/ {
    #     proxy_pass http://proyectodaw.railway.internal:8080/public;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }
    # ================================

}
